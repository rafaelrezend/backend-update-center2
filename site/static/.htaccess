# THIS FILE IS GENERATED
#
# See: <https://github.com/jenkinsci/backend-update-center2>
RewriteEngine on

# If we have a match that looks like an LTS version, e.g. 1.554.1, redirect to stable-1.554
RewriteCond %{QUERY_STRING} ^.*version=([0-9]*\.[0-9]*)\.[0-9]*$ [NC]
RewriteCond %{DOCUMENT_ROOT}/stable\-%1%{REQUEST_URI} -f
RewriteRule ^update\-center\.[json|html]+ /stable\-%1%{REQUEST_URI}? [NC,L,R=301]

##LEGACY_UPDATECENTERS_TOKEN##

# If that all failed, but we have an update center, let's go to current
RewriteRule ^update\-center\.[json|html]+ /current%{REQUEST_URI}? [NC,L,R=301]

# Ensure /release-history.json goes to the right place
RewriteRule ^release\-history\.json+ /current%{REQUEST_URI}? [NC,L,R=301]

# Ensure /latestCore.txt goes to /current/latestCore.txt
RewriteRule ^latestCore\.txt+ /current%{REQUEST_URI}? [NC,L,R=301]



ReadmeName readme.html
IndexIgnore readme.html *.php

# TODO: properly handle HTTPS in redirector

# handle the redirect with test.php.
# "L" flag causes the match to terminate, and internal redirect will be used to dispatch the request.
# "QSA" flag is used to preserve the 'version' query parameter in the request.
RewriteRule ^([^/]*\.json(\.html)?)$ redirect.php?path=$1 [L,QSA]

# For other tool installations under updates/
# HTTPS clients need to be served from HTTPS servers to avoid the error, so only send traffic to mirror for regular HTTP traffic
RewriteCond %{HTTPS} !=on
RewriteRule (.*\.json(\.html)?)$ http://mirrors.jenkins-ci.org/updates/$1



# download/* directories contain virtual URL spaces for redirecting download traffic to mirrors.
RedirectMatch 302 /download/war/([0-9]*\.[0-9]*\.[0-9]*/jenkins)\.war$ http://mirrors.jenkins-ci.org/war-stable/$1.war
RedirectMatch 302 /download/war/(.*)\.war$ http://mirrors.jenkins-ci.org/war/$1.war
RedirectMatch 302 /download/plugins/(.*)\.hpi$ http://mirrors.jenkins-ci.org/plugins/$1.hpi
